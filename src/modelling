# 3. MODELLING
print("MODELLING")

# Memisahkan fitur dan target
X = dataset[['Hours']]
y = dataset['Scores']

# Membagi data menjadi training dan testing set (80:20)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

print(f"Training set size: {X_train.shape[0]}")
print(f"Testing set size: {X_test.shape[0]}")

# Inisialisasi model
models = {
    'Linear Regression': LinearRegression(),
    'Decision Tree': DecisionTreeRegressor(random_state=42, max_depth=3),  # Membatasi depth karena data kecil
    'Random Forest': RandomForestRegressor(random_state=42, n_estimators=10)  # Mengurangi estimators karena data kecil
}

# Dictionary untuk menyimpan hasil evaluasi
results = {}

# Melatih dan mengevaluasi setiap model
for name, model in models.items():
    # Training model
    model.fit(X_train, y_train)

    # Prediksi
    y_pred = model.predict(X_test)

    # Evaluasi
    mae = mean_absolute_error(y_test, y_pred)
    mse = mean_squared_error(y_test, y_pred)
    rmse = np.sqrt(mse)
    r2 = r2_score(y_test, y_pred)

    # Menyimpan hasil
    results[name] = {
        'MAE': mae,
        'MSE': mse,
        'RMSE': rmse,
        'R2': r2
    }

    print(f"\n{name} Performance:")
    print(f"MAE: {mae:.2f}")
    print(f"MSE: {mse:.2f}")
    print(f"RMSE: {rmse:.2f}")
    print(f"R2 Score: {r2:.4f}")
